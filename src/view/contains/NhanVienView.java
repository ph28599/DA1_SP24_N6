/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.contains;

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.impl.NhanVienVMService;
import ultility.UHelper;
import viewmodel.NhanVienVM;
import viewmodel.PhieuGiamGiaVM;

/**
 *
 * @author Admin
 */
public class NhanVienView extends javax.swing.JPanel {
private final NhanVienVMService nhanVienVMService;
    List<NhanVienVM> lstnv;
    /**
     * Creates new form NhanVienView
     */
    public NhanVienView() {
        initComponents();
        rdoNam.setSelected(true);
        rdoNu.setSelected(true);
        nhanVienVMService = new NhanVienVMService();
        lstnv = new ArrayList<>();
        lstnv = nhanVienVMService.getAllNVVM();
        loadDataToTableNV(lstnv);
        jdcNgaySinh.setDateFormatString("yyyy-MM-dd");
//        txtID.setEditable(false); // Không cho phép chỉnh sửa trường input

        if (tblNhanVien.getRowCount() > 0) {
            tblNhanVien.setRowSelectionInterval(0, 0);
            showDetailNV();
        }
        showDataCboLocChucVu();
        showDataCboLocTinhTrang();
        clearFormNV();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtTimKiemHT = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        cbbLocTT = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cbbLocCV1 = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        btnAddNhanVien = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClearForm = new javax.swing.JButton();
        txtMaNhanVien = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbChucVu = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtEmailNV = new javax.swing.JTextField();
        chkTrangThai = new javax.swing.JCheckBox();
        jdcNgaySinh = new com.toedter.calendar.JDateChooser();

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Thông Tin Nhân Viên");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setText("Danh Sách Nhân Viên");

        txtTimKiemHT.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel15.setText("Tìm kiếm:");

        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Họ tên", "SĐT", "Giới tính", "Ngày sinh", "Địa chỉ", "Email", "Chức vụ", "Tên đăng nhập", "Mật khẩu", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhanVien);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Chức Vụ:");

        cbbLocTT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocTTActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Trạng Thái:");

        cbbLocCV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLocCV1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel16.setText("Lọc nhân viên: ");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTimKiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout txtTimKiemHTLayout = new javax.swing.GroupLayout(txtTimKiemHT);
        txtTimKiemHT.setLayout(txtTimKiemHTLayout);
        txtTimKiemHTLayout.setHorizontalGroup(
            txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbLocTT, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                                .addComponent(cbbLocCV1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(918, Short.MAX_VALUE)))
        );
        txtTimKiemHTLayout.setVerticalGroup(
            txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbbLocCV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(cbbLocTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
            .addGroup(txtTimKiemHTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(txtTimKiemHTLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(315, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Họ & Tên:");

        txtHoTen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Mã nhân viên:");

        btnAddNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add.png"))); // NOI18N
        btnAddNhanVien.setText("Thêm");
        btnAddNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNhanVienActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit.png"))); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClearForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Text.png"))); // NOI18N
        btnClearForm.setText("Mới");
        btnClearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFormActionPerformed(evt);
            }
        });

        txtMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNhanVienActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Số điện thoại:");

        txtSDT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Giới tính:");

        buttonGroup1.add(rdoNam);
        rdoNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdoNu.setText("Nữ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Địa chỉ:");

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Trạng thái:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Chức vụ:");

        cbbChucVu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhân Viên", "Quản Lý", " " }));
        cbbChucVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbChucVuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tên đăng nhập:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mật khẩu:");

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Ngày sinh:");

        txtTenDangNhap.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Email:");

        txtEmailNV.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        chkTrangThai.setText("Làm Việc");
        chkTrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTrangThaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(lbID)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(rdoNam)
                                                .addGap(52, 52, 52)
                                                .addComponent(rdoNu))
                                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jdcNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(223, 223, 223)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addComponent(jLabel3)))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailNV, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkTrangThai)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddNhanVien)
                    .addComponent(btnClearForm, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)
                                    .addComponent(txtEmailNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddNhanVien)
                                .addGap(29, 29, 29)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(rdoNam)
                                    .addComponent(rdoNu)
                                    .addComponent(jLabel6)
                                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnClearForm))
                                .addGap(27, 27, 27)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7))
                                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(chkTrangThai))
                            .addComponent(jdcNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(133, 133, 133)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimKiemHT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiemHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents
     public static String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] hashedPassword = md.digest(password.getBytes(StandardCharsets.UTF_8));
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedPassword) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        return null;
    }
    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
showDetailNV();
    }//GEN-LAST:event_tblNhanVienMouseClicked

    private void cbbLocTTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocTTActionPerformed
String selectedChucVu = "";
        String selectedTrangThai = "";
        if (cbbLocCV1.getSelectedItem() != null) {
            selectedChucVu = cbbLocCV1.getSelectedItem().toString();
        }
        if (cbbLocTT.getSelectedItem() != null) {
            selectedTrangThai = cbbLocTT.getSelectedItem().toString();
        }
        int cv = selectedChucVu.equalsIgnoreCase("Nhân viên") ? 1 : 0;
        int tt = selectedTrangThai.equalsIgnoreCase("Làm việc") ? 1 : 0;
        if (cbbLocCV1.getSelectedIndex() == 0 && cbbLocTT.getSelectedIndex() == 0) {
            lstnv = nhanVienVMService.getAllNVVM();
        } else if (cbbLocCV1.getSelectedIndex() != 0 && cbbLocTT.getSelectedIndex() != 0) {

            lstnv = nhanVienVMService.locNhanVien(cv, tt);

        } else if (cbbLocCV1.getSelectedIndex() != 0 && cbbLocTT.getSelectedIndex() == 0) {
            lstnv = nhanVienVMService.locChucVu(cv);
        } else if (cbbLocCV1.getSelectedIndex() == 0 && cbbLocTT.getSelectedIndex() != 0) {
            lstnv = nhanVienVMService.locTrangThai(tt);
        }
        loadDataToTableNV(lstnv);
    }//GEN-LAST:event_cbbLocTTActionPerformed

    private void cbbLocCV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLocCV1ActionPerformed
        // TODO add your handling code here:
        String selectedChucVu = "";
        String selectedTrangThai = "";
        if (cbbLocCV1.getSelectedItem() != null) {
            selectedChucVu = cbbLocCV1.getSelectedItem().toString();
        }
        if (cbbLocTT.getSelectedItem() != null) {
            selectedTrangThai = cbbLocTT.getSelectedItem().toString();
        }
        int cv = selectedChucVu.equalsIgnoreCase("Nhân viên") ? 1 : 0;
        int tt = selectedTrangThai.equalsIgnoreCase("Làm việc") ? 1 : 0;
        if (cbbLocCV1.getSelectedIndex() == 0 && cbbLocTT.getSelectedIndex() == 0) {
            lstnv = nhanVienVMService.getAllNVVM();
        } else if (cbbLocCV1.getSelectedIndex() != 0 && cbbLocTT.getSelectedIndex() != 0) {

            lstnv = nhanVienVMService.locNhanVien(cv, tt);

        } else if (cbbLocCV1.getSelectedIndex() != 0 && cbbLocTT.getSelectedIndex() == 0) {
            lstnv = nhanVienVMService.locChucVu(cv);
        } else if (cbbLocCV1.getSelectedIndex() == 0 && cbbLocTT.getSelectedIndex() != 0) {
            lstnv = nhanVienVMService.locTrangThai(tt);
        }
        loadDataToTableNV(lstnv);
    }//GEN-LAST:event_cbbLocCV1ActionPerformed

    private void btnAddNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNhanVienActionPerformed
if (UHelper.checkRong(txtMaNhanVien, "Không để trống mã nhân viên")) {
            return;
        }
        if (UHelper.checkRong(txtHoTen, "Không để trống họ tên")) {
            return;
        }
        if (UHelper.checkRong(txtSDT, "Không để trống số điện thoại")) {
            return;
        }
        if (UHelper.checkRong(txtEmailNV, "Không để trống email")) {
            return;
        }
        if (UHelper.checkRong(txtDiaChi, "Không để trống địa chỉ")) {
            return;
        }
        if (UHelper.checkRong(txtTenDangNhap, "Không để trống tên đăng nhập")) {
            return;
        }
        if (UHelper.checkRong(txtMatKhau, "Không để trống mật khẩu")) {
            return;
        }
        if (UHelper.checkRongChoNgay(jdcNgaySinh, "Không để trống ngày sinh")) {
            return;
        }
        
        
        Date selectedDate = jdcNgaySinh.getDate();
        if (!checkTuoi(selectedDate)) {
            JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi trở lên.");
            return;
        }
        String ma = txtMaNhanVien.getText();
        String sdt = txtSDT.getText();
        String email = txtEmailNV.getText();
        if (!txtMaNhanVien.getText().matches("\\w+")) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên không hợp lệ");
            return;
        }

        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
            if (ma.equalsIgnoreCase(nv.getMa())) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại");
                return;
            }
        }
        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
            if (sdt.equalsIgnoreCase(nv.getSdt())) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
                return;
            }
        }
        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
            if (email.equalsIgnoreCase(nv.getEmail())) {
                JOptionPane.showMessageDialog(this, "Email đã tồn tại");
                return;
            }
        }
        if (!txtHoTen.getText().matches("^[\\p{L} .'-]+$")) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên không hợp lệ");
            return;
        }
        if (!txtSDT.getText().matches("^0\\d{9}$")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ");
            return;
        }
        String regex = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        if (!txtEmailNV.getText().matches(regex)) {
            JOptionPane.showMessageDialog(this, "email không hợp lệ");
            return;
        }

        NhanVienVM nvvm = getNhanVienVMFormInput();
        if (nhanVienVMService.addNhanVienVM(nvvm) != null) {
            JOptionPane.showMessageDialog(this, "Thêm thành công");
            clearFormNV();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm thất bại");
        }
        loadDataToTableNV(nhanVienVMService.getAllNVVM());
        
    }//GEN-LAST:event_btnAddNhanVienActionPerformed
    private boolean checkTuoi(Date selectedDate) {
        LocalDate currentDate = LocalDate.now();
        LocalDate birthLocalDate = selectedDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Period period = Period.between(birthLocalDate, currentDate);
        return period.getYears() >= 18;
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
Integer row = tblNhanVien.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên muốn sửa!");
            return;
        }
        
        if (UHelper.checkRong(txtMaNhanVien, "Không để trống mã nhân viên")) {
            return;
        }
        if (UHelper.checkRong(txtHoTen, "Không để trống họ tên")) {
            return;
        }
        if (UHelper.checkRong(txtSDT, "Không để trống số điện thoại")) {
            return;
        }
        if (UHelper.checkRong(txtEmailNV, "Không để trống email")) {
            return;
        }
        if (UHelper.checkRong(txtDiaChi, "Không để trống địa chỉ")) {
            return;
        }
        if (UHelper.checkRong(txtTenDangNhap, "Không để trống tên đăng nhập")) {
            return;
        }
        if (UHelper.checkRong(txtMatKhau, "Không để trống mật khẩu")) {
            return;
        }
        if (UHelper.checkRongChoNgay(jdcNgaySinh, "Không để trống ngày sinh")) {
            return;
        }
        
        Date selectedDate = jdcNgaySinh.getDate();
        if (!checkTuoi(selectedDate)) {
            JOptionPane.showMessageDialog(this, "Nhân viên phải đủ 18 tuổi trở lên.");
            return;
        }
        
        String ma = txtMaNhanVien.getText();
        String sdt = txtSDT.getText();
        String email = txtEmailNV.getText();
        if (!txtMaNhanVien.getText().matches("\\w+")) {
            JOptionPane.showMessageDialog(this, "Mã nhân viên không hợp lệ");
            return;
        }

//        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
//            if (ma.equalsIgnoreCase(nv.getMa())) {
//                JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại");
//                return;
//            }
//        }
//        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
//            if (sdt.equalsIgnoreCase(nv.getSdt())) {
//                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
//                return;
//            }
//        }
//        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
//            if (cccd.equalsIgnoreCase(nv.getCccd())) {
//                JOptionPane.showMessageDialog(this, "Số căn cước đã tồn tại");
//                return;
//            }
//        }
//        for (NhanVienVM nv : nhanVienVMService.getAllNVVM()) {
//            if (email.equalsIgnoreCase(nv.getEmail())) {
//                JOptionPane.showMessageDialog(this, "Email đã tồn tại");
//                return;
//            }
//        }
        if (!txtHoTen.getText().matches("^[\\p{L} .'-]+$")) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên không hợp lệ");
            return;
        }
        if (!txtSDT.getText().matches("^0\\d{9}$")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ");
            return;
        }
        String regex = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        if (!txtEmailNV.getText().matches(regex)) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ");
            return;
        }

       
        NhanVienVM nvvm = getNhanVienVMFormInput();
        String nhanVien_ID = getNhanVienVMFormSelectedRow();
        nvvm.setMa(nhanVien_ID);
        if (nhanVienVMService.updateNhanVienVM(nvvm) != null) {
            JOptionPane.showMessageDialog(this, "Sửa nhân viên thành công");
            clearFormNV();
        } else {
            JOptionPane.showMessageDialog(this, "Sửa nhân viên thất bại");
        }
        loadDataToTableNV(nhanVienVMService.getAllNVVM());
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFormActionPerformed
        // TODO add your handling code here:
        clearFormNV();
    }//GEN-LAST:event_btnClearFormActionPerformed

    private void cbbChucVuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbChucVuActionPerformed

    }//GEN-LAST:event_cbbChucVuActionPerformed

    private void chkTrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTrangThaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkTrangThaiActionPerformed

    private void txtMaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNhanVienActionPerformed

    private void txtTimKiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemCaretUpdate
        // TODO add your handling code here:
        String key = txtTimKiem.getText().trim().toLowerCase();
        if (key.isEmpty()) {
            loadDataToTableNV(nhanVienVMService.getAllNVVM());
        } else {
            ArrayList<NhanVienVM> searchResults = new ArrayList<>();
            for (NhanVienVM nv : lstnv) {
                if (nv.getHoTen().equalsIgnoreCase(key) || startsWithIgnoreCase(nv.getHoTen(), key) || endsWithIgnoreCase(nv.getHoTen(), key)) {
                    searchResults.add(nv);
                }
            }
            loadDataToTableNV(searchResults);
        }
    }//GEN-LAST:event_txtTimKiemCaretUpdate
private boolean startsWithIgnoreCase(String str, String prefix) {
        return str.toLowerCase().startsWith(prefix.toLowerCase());
    }

    private boolean endsWithIgnoreCase(String str, String suffix) {
        return suffix.length() > 1 && str.toLowerCase().endsWith(suffix.toLowerCase());
    }

    private void showDataCboLocTinhTrang() {
        String[] gt = {"", "Làm việc", "Nghỉ việc"};
        for (String string : gt) {
            cbbLocTT.addItem(string);
        }
    }

    private void showDataCboLocChucVu() {
        String[] gt = {"", "Nhân viên", "Quản lý"};
        for (String string : gt) {
            cbbLocCV1.addItem(string);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNhanVien;
    private javax.swing.JButton btnClearForm;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbChucVu;
    private javax.swing.JComboBox<String> cbbLocCV1;
    private javax.swing.JComboBox<String> cbbLocTT;
    private javax.swing.JCheckBox chkTrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcNgaySinh;
    private javax.swing.JLabel lbID;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmailNV;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenDangNhap;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JPanel txtTimKiemHT;
    // End of variables declaration//GEN-END:variables
private void loadDataToTableNV(List<NhanVienVM> lstnv) {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm = (DefaultTableModel) tblNhanVien.getModel();
        dtm.setRowCount(0);
        List<NhanVienVM> lst = lstnv;
        for (NhanVienVM nvvm : lst) {
            dtm.addRow(new Object[]{
                nvvm.getMa(),
                nvvm.getHoTen(),
                nvvm.getgt(),
                nvvm.getSdt(),
                nvvm.getNgaySinh(),
                nvvm.getDiaChi(),
                nvvm.getEmail(),
                nvvm.getcv(),
                nvvm.getTenDN(),
                nvvm.getMatKhau(),
                nvvm.gettt()
            });
        }
    }

public void showDetailNV() {
        Integer row = tblNhanVien.getSelectedRow();
        txtMaNhanVien.setText(tblNhanVien.getValueAt(row, 0).toString());
        txtHoTen.setText(tblNhanVien.getValueAt(row, 1).toString());
        String gioiTinh = tblNhanVien.getValueAt(row, 2).toString();
        if (gioiTinh.equalsIgnoreCase("Nam")) {
            rdoNam.setSelected(true);
        } else if (gioiTinh.equalsIgnoreCase("Nữ")) {
            rdoNu.setSelected(true);
        }
        txtSDT.setText(tblNhanVien.getValueAt(row, 3).toString());
        String ngaySinhValue = tblNhanVien.getValueAt(row, 4).toString();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

        try {
            // Chuyển đổi chuỗi thành đối tượng Date
            Date ngaySinh = dateFormat.parse(ngaySinhValue);

            // Đặt giá trị cho JDateChooser
            jdcNgaySinh.setDate(ngaySinh);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        txtDiaChi.setText(tblNhanVien.getValueAt(row, 5).toString());
        txtEmailNV.setText(tblNhanVien.getValueAt(row, 6).toString());
        cbbChucVu.setSelectedItem(tblNhanVien.getValueAt(row, 7).toString());
        txtTenDangNhap.setText(tblNhanVien.getValueAt(row, 8).toString());
        txtMatKhau.setText(tblNhanVien.getValueAt(row, 9).toString());

        if (row >= 0) {
            String trangthai = tblNhanVien.getValueAt(row, 10).toString();
            if (trangthai.equalsIgnoreCase("Làm việc")) {
                chkTrangThai.setSelected(true);
            }
            if (trangthai.equalsIgnoreCase("Nghỉ việc")) {
                chkTrangThai.setSelected(false);
            }
        }

    }

public NhanVienVM getNhanVienVMFormInput() {
        NhanVienVM nvvm = new NhanVienVM();
        nvvm.setMa(txtMaNhanVien.getText());
        nvvm.setHoTen(txtHoTen.getText());
        if (rdoNam.isSelected()) {
            nvvm.setGioiTinh(1);
        } else {
            nvvm.setGioiTinh(0);
        }
        nvvm.setSdt(txtSDT.getText());

        LocalDate ngaySinh;
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

// Chuyển đổi Date sang String với định dạng "yyyy-MM-dd"
        String ngayS = dateFormat.format(jdcNgaySinh.getDate());
// Chuyển đổi String sang LocalDate
        nvvm.setNgaySinh(LocalDate.parse(ngayS));
        nvvm.setDiaChi(txtDiaChi.getText());
        nvvm.setEmail(txtEmailNV.getText());
//        String selectedChucVuStr = cbbChucVu.getSelectedItem().toString(); // Chuyển đổi sang String
//        int selectedChucVu = Integer.parseInt(selectedChucVuStr); // Chuyển đổi String sang int
//        nvvm.setChucvu(selectedChucVu);
        String chucvu = (String) cbbChucVu.getSelectedItem();
        if (chucvu.equalsIgnoreCase("Nhân viên")) {
            nvvm.setChucVu(1);
        } else {
            nvvm.setChucVu(0);
        }

        nvvm.setTenDN(txtTenDangNhap.getText());
        nvvm.setMatKhau(hashPassword(txtMatKhau.getText()));
        boolean myBooleanValue = chkTrangThai.isSelected(); // Giả sử có một biến boolean
        int trangThainv = myBooleanValue ? 1 : 0; // Ép kiểu boolean thành int (1 nếu true, 0 nếu false)
        nvvm.setTrangThai(trangThainv);

        return nvvm;
    }
    public String getNhanVienVMFormSelectedRow() {
        Integer row = tblNhanVien.getSelectedRow();
        String nhanVienID = (String) tblNhanVien.getValueAt(row, 0);
        return nhanVienID;
    }
    
    private void clearFormNV() {
        txtMaNhanVien.setText("");
        txtHoTen.setText("");
        rdoNam.setSelected(true);
        txtSDT.setText("");
        jdcNgaySinh.setDate(null);
        txtDiaChi.setText("");
        txtEmailNV.setText("");
        cbbChucVu.setSelectedIndex(0);
        txtTenDangNhap.setText("");
        txtMatKhau.setText("");
        chkTrangThai.setSelected(false);
        tblNhanVien.clearSelection();
    }
}
